"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useSearchState = useSearchState;
var _react = require("react");
var _useIndexContext = require("./useIndexContext");
var _useInstantSearchContext = require("./useInstantSearchContext");
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function useSearchState() {
  var search = (0, _useInstantSearchContext.useInstantSearchContext)();
  var searchIndex = (0, _useIndexContext.useIndexContext)();
  var indexId = searchIndex.getIndexId();
  var _useState = (0, _react.useState)(function () {
      return search.getUiState();
    }),
    _useState2 = _slicedToArray(_useState, 2),
    uiState = _useState2[0],
    setLocalUiState = _useState2[1];
  var indexUiState = uiState[indexId];
  var _useState3 = (0, _react.useState)(function () {
      return search.renderState;
    }),
    _useState4 = _slicedToArray(_useState3, 2),
    renderState = _useState4[0],
    setRenderState = _useState4[1];
  var indexRenderState = renderState[indexId] || {};
  var setUiState = (0, _react.useCallback)(function (nextUiState) {
    search.setUiState(nextUiState);
  }, [search]);
  var setIndexUiState = (0, _react.useCallback)(function (nextIndexUiState) {
    searchIndex.setIndexUiState(nextIndexUiState);
  }, [searchIndex]);
  (0, _react.useEffect)(function () {
    function handleRender() {
      setLocalUiState(search.getUiState());
      setRenderState(search.renderState);
    }
    search.addListener('render', handleRender);
    return function () {
      search.removeListener('render', handleRender);
    };
  }, [search]);
  return {
    uiState: uiState,
    setUiState: setUiState,
    indexUiState: indexUiState,
    setIndexUiState: setIndexUiState,
    renderState: renderState,
    indexRenderState: indexRenderState
  };
}